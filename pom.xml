<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.gilera.jpainter</groupId>
    <artifactId>JPainter</artifactId>
    <version>1.0.1</version>
    <packaging>jar</packaging>
    
    <name>JPainter</name>
    <url>http://maven.apache.org</url>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
    </properties>
    
    <dependencies>
        
        <dependency>
            <groupId>de.sciss</groupId>
            <artifactId>weblaf-core</artifactId>
            <version>1.28</version>
        </dependency>

        <dependency>
            <groupId>de.sciss</groupId>
            <artifactId>weblaf-ui</artifactId>
            <version>1.28</version>
        </dependency>

    </dependencies>

    


    <build>
  
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.gilera.jpainter.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>
        </plugins>

  
       
        <resources>
            <resource>
                <directory>src/main/java/com/gilera/jpainter</directory>
                <targetPath>${project.build.outputDirectory}</targetPath>
            </resource>
            <resource>
                <directory>src/main/java/resources</directory>
                <targetPath>${project.build.outputDirectory}/resources</targetPath>
            </resource>
        </resources>
    </build>
</project>